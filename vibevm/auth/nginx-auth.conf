# VibeVM Authentication Configuration for Nginx
# This configuration protects all routes except login/logout/health
# Uses auth_request module to validate sessions via the auth service

# Authentication service upstream
upstream vibevm_auth {
    server 127.0.0.1:8085;
}

# Authentication check location (internal only)
location = /auth/check {
    internal;
    proxy_pass http://vibevm_auth/check;
    proxy_pass_request_body off;
    proxy_set_header Content-Length "";
    proxy_set_header X-Original-URI $request_uri;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header Cookie $http_cookie;
}

# Login page (no authentication required)
location /login {
    proxy_pass http://vibevm_auth/login;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
}

# Logout endpoint (no authentication required)
location /logout {
    proxy_pass http://vibevm_auth/logout;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header Cookie $http_cookie;
}

# Health check endpoint (no authentication required)
location /auth/health {
    proxy_pass http://vibevm_auth/health;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
}

# Protected root location - requires authentication
location / {
    # Authenticate all requests
    auth_request /auth/check;

    # Redirect to login page on authentication failure
    error_page 401 = @error401;

    # Pass authenticated user to backend (set by auth service)
    auth_request_set $auth_user $upstream_http_x_user;
    proxy_set_header X-Authenticated-User $auth_user;

    # Proxy to existing AIO Sandbox upstream
    proxy_pass http://127.0.0.1:8080;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;

    # WebSocket support (for VNC, terminal, etc.)
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";
    proxy_read_timeout 86400;
}

# Handle authentication failures
location @error401 {
    return 302 /login;
}

# Static assets (icons, fonts, etc.) - no authentication required
location ~* \.(ico|css|js|gif|jpg|jpeg|png|svg|woff|woff2|ttf|eot)$ {
    proxy_pass http://127.0.0.1:8080;
    expires 1h;
    add_header Cache-Control "public, immutable";
}
