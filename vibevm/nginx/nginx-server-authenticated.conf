# VibeVM Authenticated Server Configuration
# This replaces the default nginx-server-active.conf to add authentication
# It should be included within the main http block of nginx.conf

# -----------------------------------------------------------------
# SERVER: Authenticated Routing Server
# All routes require valid session except login/logout/health
# -----------------------------------------------------------------
server {
    # Listen on the public port and act as the default server
    listen 8080;
    listen [::]:8080;

    # Logging
    access_log /var/log/nginx/vibevm-access.log;
    error_log /var/log/nginx/vibevm-error.log;

    # ================================================================
    # Public Endpoints (No Authentication Required)
    # ================================================================

    # Login page
    location /login {
        proxy_pass http://127.0.0.1:8085/login;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cookie_path / /;
    }

    # Logout endpoint
    location /logout {
        proxy_pass http://127.0.0.1:8085/logout;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Cookie $http_cookie;
        proxy_cookie_path / /;
    }

    # Authentication health check
    location /auth/health {
        proxy_pass http://127.0.0.1:8085/health;
        proxy_set_header Host $host;
    }

    # Internal authentication check endpoint
    location = /auth/check {
        internal;
        proxy_pass http://127.0.0.1:8085/check;
        proxy_pass_request_body off;
        proxy_set_header Content-Length "";
        proxy_set_header X-Original-URI $request_uri;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Cookie $http_cookie;
    }

    # ================================================================
    # Protected Routes (Authentication Required)
    # ================================================================

    # Default: all locations require authentication
    # Individual location blocks from included configs will inherit this context
    # We'll add auth_request to each location via a wrapper script

    # Include all the service location blocks
    # Note: These will be wrapped with auth_request by our preprocessing
    include /opt/gem/nginx/*.conf;

    # Catch-all for paths not handled by specific locations
    location / {
        # Check authentication
        auth_request /auth/check;
        auth_request_set $auth_user $upstream_http_x_user;

        # Redirect to login page on authentication failure
        error_page 401 = @redirect_to_login;

        # Serve default index
        index index.html;
        try_files $uri $uri/ =404;
    }

    # Error handler: redirect to login
    location @redirect_to_login {
        return 302 /login;
    }
}
