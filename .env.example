# VibeVM Desktop Environment Configuration
# Copy this file to .env and customize as needed

# ================================================================
# GitHub Integration
# ================================================================
# GitHub repository to clone on startup (format: owner/repo)
GITHUB_REPO=

# Optional: Specific commit hash, branch, or tag to checkout
# Leave empty to use default branch HEAD
# Examples: abc123def456, v1.0.0, main
GITHUB_COMMIT=

# Optional: Auto-update on container restart (true/false)
# When true, pulls latest changes before running setup
# Useful for updating existing deployments
VIBEVM_AUTO_UPDATE=false

# GitHub personal access token for private repositories
GH_TOKEN=

# ================================================================
# Tool Installation
# ================================================================
# Install Happy CLI (true/false)
INSTALL_HAPPY=true

# Install Claude Code (true/false)
INSTALL_CLAUDE=true

# ================================================================
# VibeVM Authentication
# ================================================================
# Username for VibeVM login
VIBEVM_USERNAME=admin

# Password for VibeVM login (plain text)
VIBEVM_PASSWORD=admin

# OR use a bcrypt hashed password (more secure)
# Generate with: python3 -c "import bcrypt; print(bcrypt.hashpw(b'your_password', bcrypt.gensalt()).decode())"
VIBEVM_PASSWORD_HASH=

# Session timeout in seconds (default: 86400 = 24 hours)
SESSION_TIMEOUT=86400

# URL to redirect to after successful login (default: / for AIO Sandbox)
# Options: / (AIO Sandbox), /vnc/ (Desktop - experimental), /jupyter (Jupyter), etc.
LOGIN_REDIRECT_URL=/

# Authentication service port (internal)
AUTH_SERVICE_PORT=8085

# ================================================================
# User Configuration
# ================================================================
# Username for the container user
USER=gem

# User ID (should match host user for volume permissions)
USER_UID=1000

# Group ID (should match host group for volume permissions)
USER_GID=1000

# ================================================================
# Display Settings
# ================================================================
# Display resolution width
DISPLAY_WIDTH=1920

# Display resolution height
DISPLAY_HEIGHT=1080

# Timezone
TZ=Asia/Singapore

# ================================================================
# Service Ports (Internal)
# ================================================================
# These are internal container ports and typically don't need to be changed
GEM_SERVER_PORT=8088
PUBLIC_PORT=8080
VNC_SERVER_PORT=5900
WEBSOCKET_PROXY_PORT=6080
AUTH_BACKEND_PORT=8081
MCP_SERVER_PORT=8089
BROWSER_REMOTE_DEBUGGING_PORT=9222

# ================================================================
# Browser Configuration
# ================================================================
# Custom user agent (optional)
BROWSER_USER_AGENT=

# Browser homepage (optional)
HOMEPAGE=

# Browser sandbox mode (--no-sandbox for Docker)
BROWSER_NO_SANDBOX=--no-sandbox

# Additional browser arguments (optional)
BROWSER_EXTRA_ARGS=

# ================================================================
# Network Configuration
# ================================================================
# Proxy server URL (optional)
# Examples: http://proxy.example.com:8080, socks5://proxy.example.com:1080
PROXY_SERVER=

# DNS over HTTPS templates (optional)
DNS_OVER_HTTPS_TEMPLATES=

# ================================================================
# Advanced Settings
# ================================================================
# Log directory inside container
LOG_DIR=/tmp/logs

# Nginx log level (debug, info, warn, error)
NGINX_LOG_LEVEL=debug

# JWT public key for authentication (optional)
JWT_PUBLIC_KEY=

# ================================================================
# Phala Cloud CVM (Confidential Virtual Machine)
# ================================================================
# Note: The dstack.sock volume is required for Phala Cloud CVM communication
# It is automatically mounted in docker-compose.yaml
# Do not modify or remove the dstack.sock mount!
